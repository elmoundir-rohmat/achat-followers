// Script pour forcer le red√©ploiement et corriger le probl√®me 404
const fs = require('fs');
const path = require('path');

console.log('üöÄ Correction du probl√®me 404 - D√©ploiement forc√©');

// 1. V√©rifier que les pages de paiement existent
const paymentSuccessPage = path.join(__dirname, 'src/components/PaymentSuccessPageFixed.tsx');
const paymentCancelPage = path.join(__dirname, 'src/components/PaymentCancelPage.tsx');
const paymentPage = path.join(__dirname, 'src/components/PaymentPage.tsx');

if (fs.existsSync(paymentSuccessPage)) {
  console.log('‚úÖ PaymentSuccessPageFixed.tsx existe');
} else {
  console.log('‚ùå PaymentSuccessPageFixed.tsx manquant');
}

if (fs.existsSync(paymentCancelPage)) {
  console.log('‚úÖ PaymentCancelPage.tsx existe');
} else {
  console.log('‚ùå PaymentCancelPage.tsx manquant');
}

if (fs.existsSync(paymentPage)) {
  console.log('‚úÖ PaymentPage.tsx existe');
} else {
  console.log('‚ùå PaymentPage.tsx manquant');
}

// 2. V√©rifier la configuration App.tsx
const appTsx = path.join(__dirname, 'src/App.tsx');
if (fs.existsSync(appTsx)) {
  const content = fs.readFileSync(appTsx, 'utf8');
  if (content.includes('payment-success')) {
    console.log('‚úÖ Routes de paiement configur√©es dans App.tsx');
  } else {
    console.log('‚ùå Routes de paiement manquantes dans App.tsx');
  }
} else {
  console.log('‚ùå App.tsx manquant');
}

// 3. V√©rifier le fichier _redirects
const redirectsFile = path.join(__dirname, 'public/_redirects');
if (fs.existsSync(redirectsFile)) {
  const content = fs.readFileSync(redirectsFile, 'utf8');
  if (content.includes('/*')) {
    console.log('‚úÖ Fichier _redirects configur√©');
  } else {
    console.log('‚ùå Fichier _redirects mal configur√©');
  }
} else {
  console.log('‚ùå Fichier _redirects manquant');
}

// 4. Cr√©er un fichier de timestamp pour forcer le d√©ploiement
const timestamp = new Date().toISOString();
const deployFile = path.join(__dirname, 'DEPLOY_TIMESTAMP.txt');
fs.writeFileSync(deployFile, `D√©ploiement forc√©: ${timestamp}`);

console.log('üìù Fichier de timestamp cr√©√© pour forcer le d√©ploiement');
console.log('üéØ Prochaines √©tapes:');
console.log('1. Pousser ce commit sur GitHub');
console.log('2. V√©rifier que Netlify red√©ploie automatiquement');
console.log('3. Tester les URLs de paiement');

console.log('‚úÖ Script termin√©');
